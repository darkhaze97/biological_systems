[{"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js":"1","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js":"2","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js":"3","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js":"4","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPage.js":"5","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ResultPage.js":"6","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificResultPage.js":"7"},{"size":589,"mtime":1609978598274,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1155,"mtime":1610440276081,"results":"11","hashOfConfig":"9"},{"size":355,"mtime":1610092274084,"results":"12","hashOfConfig":"9"},{"size":2619,"mtime":1610344593192,"results":"13","hashOfConfig":"9"},{"size":2888,"mtime":1610350432547,"results":"14","hashOfConfig":"9"},{"size":3922,"mtime":1610440564315,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hcyxu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js",[],["32","33"],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ResultPage.js",["34"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst ResultPage = (props) => {\r\n    const data = props.location.state.response\r\n    console.log(\"Here is the prop!\")\r\n    console.log(data)\r\n\r\n    //We need to scan through all the keys in the data... \r\n    for (var key of Object.keys(data)) {\r\n        console.log(key + \" -> \" + data[key])\r\n        data[key].forEach(function (item, index) {\r\n            for (var key2 of Object.keys(item)) {\r\n                console.log(key2 + \" -> \" + item[key2])\r\n                item[key2].forEach(function (item2, index2) {\r\n                    console.log(item2)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event, molecule1Info, molecule2Info) => {\r\n        event.preventDefault()\r\n        var molecule1InfoArray = molecule1Info.split(\"/\")\r\n        const molecule1 = molecule1InfoArray[0]\r\n        const type1 = molecule1InfoArray[1]\r\n\r\n        var molecule2InfoArray = molecule2Info.split(\"/\")\r\n        const molecule2 = molecule2InfoArray[0]\r\n        const type2 = molecule2InfoArray[1]\r\n\r\n        const values = {\r\n            molecule1: molecule1,\r\n            type1: type1,\r\n            molecule2: molecule2,\r\n            type2: type2\r\n        }\r\n\r\n        axios.post(\"http://127.0.0.1:8080/interactions/results/specific\", {...values})\r\n            .then((response) => {\r\n                console.log(response)\r\n                props.history.push('/interactions/results/specific', {response: response.data})\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    const deconstructData = (molecule1, interactions1) => {\r\n        return (\r\n            interactions1.map((value) => {\r\n                return (\r\n                    Object.entries(value).map(([molecule2, interactions2]) => {\r\n                        return (\r\n                            <div key={molecule1, molecule2}>\r\n                                <h6>\r\n                                    {molecule1} --{'>'} {interactions2} {molecule2}\r\n                                </h6>\r\n                                <Button onClick={(e) => {handleSubmit(e, molecule1, molecule2)}} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                                    Select\r\n                                </Button>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                    })  \r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h3>\r\n                    {Object.entries(data).map(([molecule1, interactions1]) => {\r\n                        return (\r\n                            deconstructData(molecule1, interactions1)\r\n                        )\r\n                    })}\r\n                </h3>\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ResultPage;","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificResultPage.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":54,"column":48,"nodeType":"41","messageId":"42","endLine":54,"endColumn":49},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]