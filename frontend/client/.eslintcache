[{"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js":"1","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js":"2","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js":"3","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js":"4","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPage.js":"5","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificResultPage.js":"6","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionResultPage.js":"7","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptPage.js":"8","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptResultPage.js":"9"},{"size":589,"mtime":1609978598274,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1642,"mtime":1611894151985,"results":"13","hashOfConfig":"11"},{"size":367,"mtime":1610508141920,"results":"14","hashOfConfig":"11"},{"size":2631,"mtime":1610508099641,"results":"15","hashOfConfig":"11"},{"size":4159,"mtime":1610937700733,"results":"16","hashOfConfig":"11"},{"size":2956,"mtime":1611892741679,"results":"17","hashOfConfig":"11"},{"size":1480,"mtime":1611894046994,"results":"18","hashOfConfig":"11"},{"size":840,"mtime":1611972788681,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1hcyxu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js",[],["40","41"],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificResultPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionResultPage.js",["42","43"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst ResultPage = (props) => {\r\n    const data = props.location.state.response\r\n    console.log(\"Here is the prop!\")\r\n    console.log(data)\r\n\r\n    data.forEach(function (item, index) {\r\n        for (var key of Object.keys(item)) {\r\n            console.log(key + \" -> \" + item[key])\r\n            for (var key2 of Object.keys(item[key])) {\r\n                console.log(key2 + \" -> \" + item[key][key2])\r\n                item[key][key2].forEach(function (item2, index2) {\r\n                    console.log(item2)\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    const handleSubmit = (event, molecule1Info, molecule2Info) => {\r\n        event.preventDefault()\r\n        var molecule1InfoArray = molecule1Info.split(\"/\")\r\n        const id1 = molecule1InfoArray[0]\r\n        const molecule1 = molecule1InfoArray[1]\r\n        const type1 = molecule1InfoArray[2]\r\n\r\n        var molecule2InfoArray = molecule2Info.split(\"/\")\r\n        const id2 = molecule2InfoArray[0]\r\n        const molecule2 = molecule2InfoArray[1]\r\n        const type2 = molecule2InfoArray[2]\r\n\r\n        const values = {\r\n            id1: Number(id1),\r\n            type1: type1,\r\n            id2: Number(id2),\r\n            type2: type2\r\n        }\r\n\r\n        axios.post(\"http://127.0.0.1:8080/interactions/results/specific\", {...values})\r\n            .then((response) => {\r\n                console.log(response)\r\n                props.history.push('/interactions/results/specific', {response: response.data})\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    const deconstructData = () => {\r\n        return (\r\n            data.map(function (item, index) {\r\n                return(\r\n                    Object.entries(item).map(([molecule1, innerItem]) => {\r\n                        return (\r\n                            Object.entries(innerItem).map(([molecule2, interactionInfo]) => {\r\n                                return (\r\n                                    <div>\r\n                                        <Button onClick={(e) => handleSubmit(e, molecule1, molecule2)} variant=\"contained\" color=\"primary\">\r\n                                            {molecule1} --{\">\"} {deconstructArrayIntoString(interactionInfo)} {molecule2}\r\n                                        </Button>\r\n                                    </div>\r\n                                )\r\n                            }) \r\n                        )\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const deconstructArrayIntoString = (array) => {\r\n        return (\r\n            array.map(function (item, index) {\r\n                return (item + \" \")\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"App\">\r\n            <header>\r\n                {deconstructData()}\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ResultPage;","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptResultPage.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":26,"column":15,"nodeType":"50","messageId":"51","endLine":26,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":31,"column":15,"nodeType":"50","messageId":"51","endLine":31,"endColumn":24},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'molecule1' is assigned a value but never used.","Identifier","unusedVar","'molecule2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]