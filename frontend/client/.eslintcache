[{"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js":"1","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js":"2","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js":"3","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js":"4","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptPage.js":"5","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptResultPage.js":"6","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificInteractionPage.js":"7","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificConceptPage.js":"8","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPageOne.js":"9","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPageTwo.js":"10"},{"size":589,"mtime":1609978598274,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2199,"mtime":1626269502510,"results":"14","hashOfConfig":"12"},{"size":367,"mtime":1610508141920,"results":"15","hashOfConfig":"12"},{"size":1480,"mtime":1611894046994,"results":"16","hashOfConfig":"12"},{"size":1403,"mtime":1612227042377,"results":"17","hashOfConfig":"12"},{"size":4155,"mtime":1621044049735,"results":"18","hashOfConfig":"12"},{"size":2202,"mtime":1613013452021,"results":"19","hashOfConfig":"12"},{"size":3992,"mtime":1626269421962,"results":"20","hashOfConfig":"12"},{"size":3033,"mtime":1626269445024,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hcyxu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\index.js",[],["47","48"],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\reportWebVitals.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\App.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\MainPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\ConceptResultPage.js",[],["49","50"],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificInteractionPage.js",[],"C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\SpecificConceptPage.js",["51"],"import { Button } from \"@material-ui/core\"\r\nimport axios from \"axios\"\r\n\r\nconst SpecificConceptPage = (props) => {\r\n    const data = props.location.state.response\r\n    console.log(data)\r\n    const conceptInfo = data.conceptInfo\r\n    const conceptMolecules = data.conceptMolecules\r\n    const id = 0\r\n    axios.post(\"http://127.0.0.1:8080/concepts/results/molecules/information\", {id})\r\n    .then((response) => {\r\n        console.log(response)\r\n    // props.history.push('/concepts/results/specific', {response: response.data})\r\n    })\r\n    .catch((err) => {})\r\n\r\n    const handleSubmit = (event, id) => {\r\n        axios.post(\"http://127.0.0.1:8080/concepts/results/molecules/information\", {id})\r\n        .then((response) => {\r\n            console.log(response)\r\n        // props.history.push('/concepts/results/specific', {response: response.data})\r\n        })\r\n        .catch((err) => {})\r\n    }\r\n\r\n\r\n\r\n\r\n    const deconstructConceptInfo = () => {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    {conceptInfo.concept_name}\r\n                </h1>\r\n                <div>\r\n                    {conceptInfo.info}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const deconstructConceptMolecules = () => {\r\n        return (\r\n            conceptMolecules.map(function (item, index) {\r\n                return (\r\n                    <Button>\r\n                        {Object.entries(item).map(([columnName, info]) => {\r\n                            return (\r\n                                <h4>\r\n                                    {columnName}: {info}\r\n                                </h4>\r\n                            )\r\n                        })}\r\n                    </Button>\r\n\r\n                )\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"App\">\r\n            <div class=\"component-padding\">\r\n                {deconstructConceptInfo()}\r\n            </div>\r\n            <div class=\"component-padding\">\r\n                <p>\r\n                    Molecule contributions\r\n                </p>\r\n                {deconstructConceptMolecules()}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SpecificConceptPage","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPageOne.js",["52"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, TextField, Select, FormControl, MenuItem, Menu, InputLabel } from \"@material-ui/core\"\r\n\r\nconst InteractionPage = (props) => {\r\n\r\n    var entityTypesArray = JSON.parse(localStorage.getItem(\"entityTypes\"));\r\n\r\n\r\n    const [values, setValues] = React.useState({\r\n        entity1: '',\r\n        entity2: '',\r\n    })\r\n\r\n    const [types, setTypes] = React.useState({\r\n        type1: 'Any',\r\n        type2: 'Any',\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    }\r\n\r\n    const handleTypeChange = event => {\r\n        const name = event.target.name\r\n        setTypes({ ...types, [name]: event.target.value})\r\n    }\r\n\r\n    const createDropdowns = () => {\r\n        return (         \r\n            entityTypesArray.map( function (item, index) {\r\n              //  console.log(item)\r\n                return (\r\n                    <MenuItem value={item}>\r\n                        {item}\r\n                    </MenuItem>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        axios.post(\"http://127.0.0.1:8080/interactions/results/all\", {...values, ...types})\r\n            .then((response) => {\r\n                console.log(response)\r\n                props.history.push('/interactions/results/all', {response: response.data})\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    console.log(\"I have reached here.\")\r\n\r\n    return (\r\n        <div class=\"App\">\r\n            <header>\r\n                <h3>\r\n                    Interactions between entities\r\n                </h3>\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextField \r\n                    label=\"Entity 1\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\" \r\n                    id=\"entity1\" \r\n                    name=\"entity1\" \r\n                    value={values.molecule1} \r\n                    onChange={handleChange(\"entity1\")}\r\n                /><br></br>     \r\n                <FormControl style={{minWidth: 200}}>\r\n                    <InputLabel id=\"type1\">Entity 1 Type</InputLabel>\r\n                    <Select\r\n                     labelId=\"type1\"\r\n                     id=\"type1\"\r\n                     value={types.type1}\r\n                     onChange={handleTypeChange}\r\n                     inputProps={{name: 'type1'}}\r\n                     >\r\n                        <MenuItem value={\"Any\"}>\r\n                            Any\r\n                        </MenuItem>\r\n                        {createDropdowns()}\r\n                    </Select>   \r\n                </FormControl>\r\n                <br></br>\r\n                <TextField\r\n                    label=\"Entity 2\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    id=\"entity2\"\r\n                    name=\"entity2\"\r\n                    value={values.molecule2}\r\n                    onChange={handleChange(\"entity2\")}\r\n                /><br></br>\r\n                <FormControl style={{minWidth: 200}}>\r\n                    <InputLabel id=\"type2\">Entity 2 Type</InputLabel>\r\n                    <Select\r\n                     labelId=\"type2\"\r\n                     id=\"type2\"\r\n                     value={types.type2}\r\n                     onChange={handleTypeChange}\r\n                     inputProps={{name: 'type2'}}\r\n                     >\r\n                        <MenuItem value={\"Any\"}>\r\n                            Any\r\n                        </MenuItem>\r\n                        {createDropdowns()}\r\n                    </Select>   \r\n                </FormControl>\r\n                <br></br>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n        </div> \r\n    )\r\n\r\n    \r\n\r\n};\r\n\r\nexport default InteractionPage;","C:\\Users\\timhu\\cseprojects\\biological_systems\\frontend\\client\\src\\pages\\InteractionPageTwo.js",["53"],"import React from \"react\"\r\nimport axios from \"axios\"\r\nimport { Button } from \"@material-ui/core\"\r\n\r\nconst ResultPage = (props) => {\r\n    const data = props.location.state.response\r\n    console.log(\"Here is the prop!\")\r\n    console.log(data)\r\n\r\n    data.forEach(function (item, index) {\r\n        for (var key of Object.keys(item)) {\r\n            console.log(key + \" -> \" + item[key])\r\n            for (var key2 of Object.keys(item[key])) {\r\n                console.log(key2 + \" -> \" + item[key][key2])\r\n                item[key][key2].forEach(function (item2, index2) {\r\n                    console.log(item2)\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    if (data.length == 0) {\r\n        return (\r\n            <div class=\"App\">\r\n                <h1>\r\n                    No matching information.\r\n                </h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleSubmit = (event, entity1Info, entity2Info) => {\r\n        event.preventDefault()\r\n        var entity1InfoArray = entity1Info.split(\"/\")\r\n        const id1 = entity1InfoArray[0]\r\n        const type1 = entity1InfoArray[2]\r\n\r\n        var entity2InfoArray = entity2Info.split(\"/\")\r\n        const id2 = entity2InfoArray[0]\r\n        const type2 = entity2InfoArray[2]\r\n\r\n        const values = {\r\n            id1: Number(id1),\r\n            type1: type1,\r\n            id2: Number(id2),\r\n            type2: type2\r\n        }\r\n\r\n        axios.post(\"http://127.0.0.1:8080/interactions/results/specific\", {...values})\r\n            .then((response) => {\r\n                console.log(response)\r\n                props.history.push('/interactions/results/specific', {response: response.data})\r\n            })\r\n            .catch((err) => {})\r\n    }\r\n\r\n    const deconstructData = () => {\r\n        return (\r\n            data.map(function (item, index) {\r\n                return(\r\n                    Object.entries(item).map(([entity1, innerItem]) => {\r\n                        return (\r\n                            Object.entries(innerItem).map(([entity2, interactionInfo]) => {\r\n                                return (\r\n                                    <div>\r\n                                        <Button onClick={(e) => handleSubmit(e, entity1, entity2)} variant=\"contained\" color=\"primary\">\r\n                                            {entity1} --{\">\"} {deconstructArrayIntoString(interactionInfo)} {entity2}\r\n                                        </Button>\r\n                                    </div>\r\n                                )\r\n                            }) \r\n                        )\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    const deconstructArrayIntoString = (array) => {\r\n        return (\r\n            array.map(function (item, index) {\r\n                return (item + \" \")\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"App\">\r\n            <header>\r\n                {deconstructData()}\r\n            </header>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ResultPage;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":17,"column":11,"nodeType":"62","messageId":"63","endLine":17,"endColumn":23},{"ruleId":"60","severity":1,"message":"64","line":3,"column":60,"nodeType":"62","messageId":"63","endLine":3,"endColumn":64},{"ruleId":"65","severity":1,"message":"66","line":22,"column":21,"nodeType":"67","messageId":"68","endLine":22,"endColumn":23},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],["69"],["70"],"no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","'Menu' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]